from telegram import Update, InputMediaPhoto, InputMediaVideo, ParseMode
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    ConversationHandler,
    CallbackContext,
)

# --- —Å–æ—Å—Ç–æ—è–Ω–∏—è ---
TEXT, MEDIA_DECISION, MEDIA = range(3)

# --- —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö ---
user_data = {}

# --- —Å—Ç–∞—Ä—Ç ---
def start(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user_data[user_id] = {"text": None, "media": []}

    update.message.reply_text(
        "<b>üëã –ü—Ä–∏–≤–µ—Ç! –¢—ã –≤ –ø—Ä–µ–¥–ª–æ–∂–∫–µ –∫–∞–Ω–∞–ª–∞ UnderNet.</b>\n\n"
        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å:\n"
        "‚Äî –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é –¥–ª—è –ø–æ—Å—Ç–∞\n"
        "‚Äî –ü–æ–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å —Å–∞–π—Ç\n"
        "‚Äî –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–∞—Ö–æ–¥–∫–æ–π –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞\n\n"
        "‚úçÔ∏è –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—é–¥–∞, –∏ –æ–Ω–æ –ø–æ–ø–∞–¥—ë—Ç –∞–¥–º–∏–Ω—É.\n\n"
        "‚ö°Ô∏è –í—Å–µ —Ç–≤–æ–∏ –∏–¥–µ–∏ –≤–∞–∂–Ω—ã ‚Äî —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –ø—Ä–æ–µ–∫—Ç–µ!\n\n"
        "üí°–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç —Å–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –∏–¥–µ–∏.",
        parse_mode=ParseMode.HTML
    )
    return TEXT

# --- –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ ---
def handle_text(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user_data[user_id]["text"] = update.message.text

    update.message.reply_text(
        "–•–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ?\n–ù–∞–ø–∏—à–∏ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'."
    )
    return MEDIA_DECISION

# --- –≤—ã–±–æ—Ä –º–µ–¥–∏–∞ ---
def handle_media_decision(update: Update, context: CallbackContext):
    text = update.message.text.lower()
    if text == "–¥–∞":
        update.message.reply_text("–û—Ç–ø—Ä–∞–≤–ª—è–π —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ (–º–∞–∫—Å–∏–º—É–º 4).\n0/4")
        return MEDIA
    elif text == "–Ω–µ—Ç":
        send_to_admin(update, context)
        return ConversationHandler.END
    else:
        update.message.reply_text("–ù–µ –ø–æ–Ω—è–ª? –ù–∞–ø–∏—à–∏ –µ—â—ë —Ä–∞–∑: '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.")
        return MEDIA_DECISION

# --- –∑–∞–≥—Ä—É–∑–∫–∞ –º–µ–¥–∏–∞ ---
def handle_media(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    media_list = user_data[user_id]["media"]

    if len(media_list) >= 4:
        update.message.reply_text("‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –±–æ–ª—å—à–µ 4 —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ!")
        return MEDIA

    if update.message.photo:
        file_id = update.message.photo[-1].file_id
        media_list.append(("photo", file_id))
    elif update.message.video:
        file_id = update.message.video.file_id
        media_list.append(("video", file_id))

    count = len(media_list)
    update.message.reply_text(
        f"{count}/4. –≠—Ç–æ –≤—Å—ë? –ù–∞–ø–∏—à–∏ '–¥–∞' –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å."
    )
    return MEDIA_DECISION

# --- –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ –Ω–∞ —ç—Ç–∞–ø–µ –≤—ã–±–æ—Ä–∞ –º–µ–¥–∏–∞ ---
def wrong_input_media_decision(update: Update, context: CallbackContext):
    update.message.reply_text("–ù–µ –ø–æ–Ω—è–ª? –ù–∞–ø–∏—à–∏ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.")
    return MEDIA_DECISION

# --- –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ –Ω–∞ —ç—Ç–∞–ø–µ –∑–∞–≥—Ä—É–∑–∫–∏ ---
def wrong_input_media(update: Update, context: CallbackContext):
    update.message.reply_text("‚õî –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏—Å—ã–ª–∞–π —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ '–¥–∞', –µ—Å–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª.")
    return MEDIA

# --- —Å–±—Ä–æ—Å /again ---
def again(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user_data[user_id] = {"text": None, "media": []}
    update.message.reply_text("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ!\n\nüí° –ù–∞–ø–∏—à–∏ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
    return TEXT

# --- –æ—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É ---
def send_to_admin(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    text = user_data[user_id]["text"]
    media = user_data[user_id]["media"]

    admin_id = YOUR_ADMIN_ID   # üî¥ –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π ID

    if media:
        media_group = []
        for i, (mtype, file_id) in enumerate(media):
            caption = text if i == 0 else None
            if mtype == "photo":
                media_group.append(InputMediaPhoto(file_id, caption=caption, parse_mode=ParseMode.HTML))
            elif mtype == "video":
                media_group.append(InputMediaVideo(file_id, caption=caption, parse_mode=ParseMode.HTML))
        context.bot.send_media_group(chat_id=admin_id, media=media_group)
    else:
        context.bot.send_message(chat_id=admin_id, text=text, parse_mode=ParseMode.HTML)

    update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –£–∂–µ –±–µ–≥—É –∫ –∞–¥–º–∏–Ω—É —Å —Ç–≤–æ–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º!")

# --- main ---
def main():
    updater = Updater("YOUR_TOKEN", use_context=True)  # üî¥ –∑–∞–º–µ–Ω–∏ –Ω–∞ —Ç–æ–∫–µ–Ω
    dp = updater.dispatcher

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            TEXT: [MessageHandler(Filters.text & ~Filters.command, handle_text)],
            MEDIA_DECISION: [
                MessageHandler(Filters.regex("^(–¥–∞|–Ω–µ—Ç)$"), handle_media_decision),
                MessageHandler(Filters.text & ~Filters.command, wrong_input_media_decision),
            ],
            MEDIA: [
                MessageHandler(Filters.photo | Filters.video, handle_media),
                MessageHandler(Filters.text & ~Filters.command, wrong_input_media),
            ],
        },
        fallbacks=[CommandHandler("again", again)],
    )

    dp.add_handler(conv_handler)

    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
