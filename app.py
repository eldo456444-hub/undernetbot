import os
import threading
import time
from flask import Flask
import telebot

# üîë –¢–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Render
TOKEN = os.environ['TOKEN']
bot = telebot.TeleBot(TOKEN)

# üîí ID –≤–∞—à–µ–≥–æ —á–∞—Ç–∞ –∏–ª–∏ –∫–∞–Ω–∞–ª–∞
ADMIN_CHAT_ID = -4881160812  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π ID

# --- Flask –¥–ª—è Render ---
app = Flask(__name__)

@app.route("/")
def home():
    return "ok"

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–µ—Å—Å–∏–∏
user_sessions = {}

MAX_MEDIA = 4  # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ–¥–∏–∞

# --- /start ---
@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    user_sessions[chat_id] = {'text': None, 'media': [], 'count': 0}
    bot.reply_to(
        message,
        "<b>üëã –ü—Ä–∏–≤–µ—Ç! –¢—ã –≤ –ø—Ä–µ–¥–ª–æ–∂–∫–µ –∫–∞–Ω–∞–ª–∞ UnderNet.</b>\n\n"
        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å:\n"
        "‚Äî –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é –¥–ª—è –ø–æ—Å—Ç–∞\n"
        "‚Äî –ü–æ–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å —Å–∞–π—Ç\n"
        "‚Äî –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–∞—Ö–æ–¥–∫–æ–π –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞\n\n"
        "‚úçÔ∏è –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—é–¥–∞, –∏ –æ–Ω–æ –ø–æ–ø–∞–¥—ë—Ç –∞–¥–º–∏–Ω—É.\n\n"
        "‚ö°Ô∏è –í—Å–µ —Ç–≤–æ–∏ –∏–¥–µ–∏ –≤–∞–∂–Ω—ã ‚Äî —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –ø—Ä–æ–µ–∫—Ç–µ!\n\n"
        "üí°–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç —Å–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –∏–¥–µ–∏.",
        parse_mode='HTML'
    )
    bot.register_next_step_handler(message, handle_text_step)

# --- –ö–æ–º–∞–Ω–¥–∞ /again ---
@bot.message_handler(commands=['again'])
def again(message):
    chat_id = message.chat.id
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_sessions[chat_id] = {'text': None, 'media': [], 'count': 0}
    bot.reply_to(
        message,
        "<b>üîÑ –ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ!</b>\n\n‚úè–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç —Å–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –∏–¥–µ–∏.",
        parse_mode='HTML'
    )
    bot.register_next_step_handler(message, handle_text_step)

# --- –≠—Ç–∞–ø 1: —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ---
def handle_text_step(message):
    chat_id = message.chat.id
    user_sessions[chat_id]['text'] = message.text
    bot.send_message(chat_id, "‚úÖ –¢–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω!\nüì∑ –•–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ? –ù–∞–ø–∏—à–∏ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.")
    bot.register_next_step_handler(message, handle_media_prompt)

# --- –≠—Ç–∞–ø 2: —Å–ø—Ä–∞—à–∏–≤–∞–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞—Ç—å –º–µ–¥–∏–∞ ---
def handle_media_prompt(message):
    chat_id = message.chat.id
    text = message.text.lower()
    if text == '–Ω–µ—Ç':
        bot.send_message(chat_id, "‚úÖ –û–∫–µ–π, —Å–ø–∞—Å–∏–±–æ! –£–∂–µ –±–µ–≥—É –∫ –∞–¥–º–∏–Ω—É —Å —Ç–≤–æ–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º!")
        send_to_admin(chat_id)
        user_sessions.pop(chat_id)
    elif text == '–¥–∞':
        bot.send_message(chat_id, f"–û—Ç–ø—Ä–∞–≤–ª—è–π —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ (0/{MAX_MEDIA})")
        bot.register_next_step_handler(message, handle_media_step)
    else:
        bot.send_message(chat_id, "‚õî –ù–µ –ø–æ–Ω—è–ª? –ù–∞–ø–∏—à–∏ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.")
        bot.register_next_step_handler(message, handle_media_prompt)

# --- –≠—Ç–∞–ø 3: –ø—Ä–∏—ë–º –º–µ–¥–∏–∞ ---
def handle_media_step(message):
    chat_id = message.chat.id
    session = user_sessions.get(chat_id)
    if session is None:
        bot.send_message(chat_id, "‚õî –°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ù–∞—á–Ω–∏ —Å /start")
        return

    if len(session['media']) >= MAX_MEDIA:
        bot.send_message(chat_id, f"‚õî –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –±–æ–ª—å—à–µ {MAX_MEDIA} –º–µ–¥–∏–∞!")
        bot.send_message(chat_id, "üëå –ï—Å–ª–∏ —Ö–æ—á–µ—à—å, –∑–∞–≤–µ—Ä—à–∏ –æ—Ç–ø—Ä–∞–≤–∫—É, –Ω–∞–ø–∏—à–∏ '–¥–∞'.")
        bot.register_next_step_handler(message, handle_media_confirm)
        return

    if message.content_type == 'photo':
        file_id = message.photo[-1].file_id
        session['media'].append({'type': 'photo', 'file_id': file_id})
    elif message.content_type == 'video':
        file_id = message.video.file_id
        session['media'].append({'type': 'video', 'file_id': file_id})
    elif message.text.lower() == '–¥–∞':
        bot.send_message(chat_id, "‚ù§ –°–ø–∞—Å–∏–±–æ! –£–∂–µ –±–µ–≥—É –∫ –∞–¥–º–∏–Ω—É —Å —Ç–≤–æ–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º!")
        send_to_admin(chat_id)
        user_sessions.pop(chat_id)
        return
    else:
        bot.send_message(chat_id, "‚õî –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏—Å—ã–ª–∞–π —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ '–¥–∞', –µ—Å–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª.")
        bot.register_next_step_handler(message, handle_media_step)
        return

    count = len(session['media'])
    if count >= MAX_MEDIA:
        bot.send_message(chat_id, f"{count}/{MAX_MEDIA} ‚Äî –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç!")
        bot.send_message(chat_id, "‚ù§ –°–ø–∞—Å–∏–±–æ! –£–∂–µ –±–µ–≥—É –∫ –∞–¥–º–∏–Ω—É —Å —Ç–≤–æ–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º!")
        send_to_admin(chat_id)
        user_sessions.pop(chat_id)
    else:
        bot.send_message(chat_id, f"{count}/{MAX_MEDIA}, üëå —ç—Ç–æ –≤—Å—ë? –ï—Å–ª–∏ –¥–∞ ‚Äî –Ω–∞–ø–∏—à–∏ '–¥–∞', –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –ø—Ä–∏—Å—ã–ª–∞–π –¥–∞–ª—å—à–µ.")
        bot.register_next_step_handler(message, handle_media_step)

# --- –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É ---
def send_to_admin(chat_id):
    session = user_sessions.get(chat_id)
    if session is None:
        return
    text = session['text'] or "(–Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞)"
    bot.send_message(ADMIN_CHAT_ID,
                     f"üí° –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{bot.get_chat(chat_id).username or chat_id}:\n\n{text}")
    for m in session['media']:
        if m['type'] == 'photo':
            bot.send_photo(ADMIN_CHAT_ID, m['file_id'],
                           caption=f"üì∑ –û—Ç @{bot.get_chat(chat_id).username or chat_id}")
        elif m['type'] == 'video':
            bot.send_video(ADMIN_CHAT_ID, m['file_id'],
                           caption=f"üé• –û—Ç @{bot.get_chat(chat_id).username or chat_id}")

# --- Flask –∏ –±–æ—Ç ---
def run_flask():
    port = int(os.environ.get("PORT", 10000))
    app.run(host="0.0.0.0", port=port)

def run_bot():
    while True:
        try:
            print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
            bot.infinity_polling(skip_pending=True, timeout=10, long_polling_timeout=20)
        except Exception as e:
            print("Bot error:", e)
            time.sleep(3)

if __name__ == "__main__":
    threading.Thread(target=run_flask, daemon=True).start()
    run_bot()
